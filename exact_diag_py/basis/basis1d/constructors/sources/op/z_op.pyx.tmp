
def {type_code}_z_op(_np.ndarray[{np_basis_type}_t,ndim=1] basis, str opstr, _np.ndarray[NP_INT32_t,ndim=1] indx, int L, int zblock):
	cdef {c_basis_type} i,s,g
	cdef {c_basis_type} Ns = basis.shape[0]
	cdef _np.ndarray[{np_basis_type}_t,ndim = 1,mode='c'] R = _np.zeros(2,{np_basis_type})
	cdef _np.ndarray[{np_basis_type}_t,ndim=1,mode='c'] col
	cdef _np.ndarray[{np_matrix_type}_t,ndim=1,mode='c'] ME
	cdef int error

	col,ME,error = {type_code}_spinop(basis,opstr,indx)

	if error != 0:
		return col,ME,error

	for i in range(Ns):
		s = col[i]
		RefState_Z(s,L,R)

		s = R[0]
		g = R[1]

		s = findzstate(basis,Ns,s)
		col[i] = s
		if s == -1: continue

		ME[i] *= (zblock)**g


	return col,ME,error






