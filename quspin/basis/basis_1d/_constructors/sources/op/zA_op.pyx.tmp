
def {type_code}_zA_op(_np.ndarray[{np_basis_type}_t,ndim=1] basis, str opstr, _np.ndarray[NP_INT32_t,ndim=1] indx, {c_complex_type} J, int L, int zAblock):
	cdef {c_basis_type} s
	cdef int error,ss,i,Ns,gA
	cdef _np.ndarray[{np_basis_type}_t,ndim = 1,mode='c'] R = _np.zeros(2,{np_basis_type})
	cdef _np.ndarray[NP_INT32_t,ndim=1] row
	cdef _np.ndarray[{c_matrix_type},ndim=1,mode='c'] ME

	Ns = basis.shape[0]

	row,ME,error = {type_code}_spinop(basis,opstr,indx,J)

	if error != 0:
		return row,ME,error

	for i in range(Ns):
		s = row[i]
		RefState_ZA_template(flip_sublat_A,s,L,R)

		s = R[0]
		gA = R[1]

		ss = findzstate(basis,Ns,s)
		row[i] = ss
		if ss == -1: continue
		ME[i] *= (zAblock)**gA


	return row,ME,error






